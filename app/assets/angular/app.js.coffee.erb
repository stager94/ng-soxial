window.App = angular.module("NGSocial", [
	"ngResource",
	"ngRoute",
	"ngSanitize",
	"app.loading",
	"app.directives",
	"templates",
	"security",
	"access",
	"profile",
	"infinite-scroll"
])

App.config ($routeProvider, $locationProvider) ->
	# Optimize for social engines
	$locationProvider.html5Mode(false).hashPrefix '!' 
	$routeProvider.when("/", 
		redirectTo: "/home").
	when("/home", 
		templateUrl: "dashboard.html",
		controller: "HomeController"
	).
	when("/login", 
		templateUrl: "security/login.html", 
		controller: "SessionController", 
		resolve:
			factory: AccessController.checkAuth
	).
	when("/signup",
		templateUrl: "security/signup.html",
		controller: "SessionController",
		resolve:
			factory: AccessController.checkAuth
	).
	when("/users/dashboard",
		templateUrl: "users/dashboard.html",
		controller: "ProfileController",
		resolve:
			factory: AccessController.checkAccess
	).
	when("/users/:id",
		templateUrl: "users/show.html",
		controller: "UsersController",
		resolve:
			factory: AccessController.checkAccess
	).
	when("/users/:id/:tab",
		templateUrl: "users/show.html",
		controller: "UsersController",
		resolve:
			factory: AccessController.checkAccess
	)
	

App.config ["$httpProvider", ($httpProvider) ->
	$httpProvider.defaults.headers.common["X-CSRF-Token"] = document.getElementsByName("csrf-token")[0].content
	$httpProvider.defaults.headers.common['Accept'] = "application/json"
]

App.config ($httpProvider) ->
	$httpProvider.defaults.headers.common["X-CSRF-Token"] = $("meta[name=csrf-token]").attr("content")

	interceptor = [
		"$rootScope"
		"$q"
		(scope, $q) ->
			success = (response) ->
				response
			error = (response) ->
				if response.status is 401
					deferred = $q.defer()
					scope.$broadcast "event:unauthorized"
					return deferred.promise
				if response.status is 500
					deferred = $q.defer()
					scope.$broadcast "event:error"
				$q.reject response
			return (promise) ->
				promise.then success, error
	]
	$httpProvider.responseInterceptors.push interceptor
	return

App.filter "convertState", ($sce) ->
	(state) ->
		console.log "State is ", state
		if state is 1
			$sce.trustAsHtml "<strong>" + state + "</strong> special state"
		else
			$sce.trustAsHtml "<strong>" + state + "</strong> normal state"



angular.module("NGSocial").run (security) ->
	# Get the current user when the application starts
	# (in case they are still logged in from a previous session)
	us = security.requestCurrentUser()